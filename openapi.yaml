openapi: 3.0.3
info:
  title: Products API
  description: API для управления каталогом товаров с базой данных SQLite
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /api/products:
    get:
      summary: Получить товары с фильтрацией
      description: Возвращает список товаров с возможностью фильтрации по категории и поиска
      parameters:
        - name: category_id
          in: query
          description: Фильтр по ID категории
          required: false
          schema:
            type: integer
            minimum: 1
        - name: q
          in: query
          description: Поиск по названию и описанию
          required: false
          schema:
            type: string
            maxLength: 100
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  count:
                    type: integer
                  filters:
                    type: object
                    properties:
                      category_id:
                        type: integer
                        nullable: true
                      search:
                        type: string
                        nullable: true

    post:
      summary: Создать новый товар
      description: Создает новый товар в каталоге
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Товар успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Ошибка валидации или дублирование имени
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/products/{id}:
    get:
      summary: Получить товар по ID
      description: Возвращает товар по указанному ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID товара
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Товар найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Обновить товар
      description: Частично обновляет товар по ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID товара
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: Товар успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Ошибка валидации или дублирование имени
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Удалить товар
      description: Удаляет товар по ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID товара
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Товар успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/categories:
    get:
      summary: Получить все категории
      description: Возвращает список всех категорий с количеством товаров
      responses:
        '200':
          description: Список категорий
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  count:
                    type: integer

    post:
      summary: Создать новую категорию
      description: Создает новую категорию
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '201':
          description: Категория успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Ошибка валидации или дублирование имени
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/categories/{id}:
    get:
      summary: Получить категорию по ID
      description: Возвращает категорию по указанному ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID категории
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Категория найдена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Обновить категорию
      description: Частично обновляет категорию по ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID категории
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryRequest'
      responses:
        '200':
          description: Категория успешно обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Ошибка валидации или дублирование имени
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Удалить категорию
      description: Удаляет категорию по ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID категории
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Категория успешно удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/upload:
    post:
      summary: Загрузить файл
      description: Загружает файл на сервер
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: |
                    Файл для загрузки. Поддерживаемые типы:
                    - Изображения: JPEG, PNG, GIF, WebP, SVG
                    - Документы: PDF, DOC, DOCX, TXT, XLS, XLSX, PPT, PPTX
                    - Архивы: ZIP, RAR, 7Z
                    Максимальный размер: 5MB
      responses:
        '200':
          description: Файл успешно загружен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      file:
                        $ref: '#/components/schemas/UploadedFile'
        '400':
          description: Ошибка валидации файла
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Получить список загруженных файлов
      description: Возвращает список всех загруженных файлов
      responses:
        '200':
          description: Список файлов
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'
                  count:
                    type: integer

  /api/upload/{filename}:
    delete:
      summary: Удалить файл
      description: Удаляет загруженный файл
      parameters:
        - name: filename
          in: path
          required: true
          description: Имя файла
          schema:
            type: string
      responses:
        '200':
          description: Файл успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      filename:
                        type: string
        '404':
          description: Файл не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
        - in_stock
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "iPhone 15"
        price:
          type: number
          example: 999
        description:
          type: string
          example: "Новейший смартфон от Apple"
        category_id:
          type: integer
          nullable: true
          example: 1
        category_name:
          type: string
          nullable: true
          example: "Электроника"
        in_stock:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"

    CreateProductRequest:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: "iPhone 15"
        price:
          type: number
          minimum: 0.01
          example: 999
        description:
          type: string
          maxLength: 500
          example: "Новейший смартфон от Apple"
        category_id:
          type: integer
          minimum: 1
          example: 1
        in_stock:
          type: boolean
          default: true
          example: true

    UpdateProductRequest:
      type: object
      minProperties: 1
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: "iPhone 15 Pro"
        price:
          type: number
          minimum: 0.01
          example: 1199
        description:
          type: string
          maxLength: 500
          example: "Профессиональный смартфон"
        category_id:
          type: integer
          minimum: 1
          example: 1
        in_stock:
          type: boolean
          example: false

    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Электроника"
        description:
          type: string
          example: "Электронные устройства и гаджеты"
        products_count:
          type: integer
          example: 5
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"

    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: "Электроника"
        description:
          type: string
          maxLength: 200
          example: "Электронные устройства и гаджеты"

    UpdateCategoryRequest:
      type: object
      minProperties: 1
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 50
          example: "Электроника и гаджеты"
        description:
          type: string
          maxLength: 200
          example: "Современные электронные устройства"

    UploadedFile:
      type: object
      properties:
        name:
          type: string
          example: "1640995200000-123456789.jpg"
        originalName:
          type: string
          example: "product-image.jpg"
        path:
          type: string
          example: "uploads/1640995200000-123456789.jpg"
        size:
          type: integer
          example: 1024000
        mimetype:
          type: string
          example: "image/jpeg"
        url:
          type: string
          example: "/uploads/1640995200000-123456789.jpg"

    FileInfo:
      type: object
      properties:
        name:
          type: string
          example: "1640995200000-123456789.jpg"
        size:
          type: integer
          example: 1024000
        created:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00.000Z"
        url:
          type: string
          example: "/uploads/1640995200000-123456789.jpg"

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Товар не найден"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "name"
              message:
                type: string
                example: "Название товара обязательно"
              value:
                type: string
                example: ""